{"version":3,"file":"static/js/910.6f8bdbe6.chunk.js","mappings":"8LAEO,SAAeA,EAAtB,oC,aAAO,O,oBAAA,WAA2BC,EAAQC,GAAnC,uEACY,gCACD,mCAFX,SAIQC,EAAAA,EAAAA,IAAA,UAHI,iCAGJ,OACGF,EADH,oBAFG,mCAEH,YACgCC,EADhC,oBAJR,0G,0KCDP,EAAuB,qBAAvB,EAAoD,sBAApD,EAAgF,oBAAhF,EAA2G,qB,SC6E3G,EAvEe,WAAO,IAAD,EACnB,GAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAEXX,EAAK,UAAGG,EAAaS,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVb,EAAJ,CAEAS,EAAaT,GACb,IAAMD,EAAS,eACTe,EAAW,gBAAYd,IALf,mCAkBde,EAjBwB,CADV,wCAMd,gHAE2BjB,EAAAA,EAAAA,GAAYC,EAAQe,GAF/C,mBAEYE,EAFZ,EAEYA,KACRT,EAAUS,EAAKC,SAEa,IAAxBD,EAAKC,QAAQC,OALrB,yCAMaC,EAAAA,OAAAA,QAAe,6BAN5B,yDASIC,QAAQC,IAAR,MATJ,2DANc,sBAmBf,GAAE,CAACrB,IAcJ,OACE,gCACE,kBAAMsB,SAdW,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAcF,EAAMG,OAAOC,SAASC,MAAMC,MAEhDzB,EAAgB,CAAEJ,MAAOyB,GAC1B,EAQiCK,UAAWC,EAAzC,WACE,kBACED,UAAWC,EACXC,KAAK,OACLC,KAAK,QACLC,SAXkB,SAAAX,GACxBd,EAAac,EAAMG,OAAOG,MAC3B,EAUOA,MAAOrB,EACP2B,YAAY,mBAEd,mBAAQL,UAAWC,EAASC,KAAK,SAAjC,UACE,SAAC,MAAD,CAAUI,MAAM,QAAQC,SAAS,eAGrC,wBACG/B,EAAOgC,KAAI,SAAAC,GACV,OACE,eAAmBT,UAAWC,EAA9B,UACE,SAAC,KAAD,CAAMS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMjC,GAAhD,SACG6B,EAAMK,SAFFL,EAAME,GAMlB,QAIR,C","sources":["API/themoviedbApi.js","webpack://search-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchMovies(params, query) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = '3ecc7363f263881322228195a13f9a25';\n\n  return await axios.get(\n    `${BASE_URL}${params}?api_key=${API_KEY}&${query}&language=en-US`\n  );\n}\n// ?language=en-US`, {\n//         headers: {\n//             Accept: \"application/json\",\n//             Authorization: API_KEY\n//         },\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"item\":\"Movies_item__Ba4aJ\"};","import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'API/themoviedbApi';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { CiSearch } from 'react-icons/ci';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const location = useLocation();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n\n    setInputText(query);\n    const params = 'search/movie';\n    const queryParams = `query=${query}`;\n    async function featch() {\n      try {\n        const { data } = await fetchMovies(params, queryParams);\n        setMovies(data.results);\n\n        if (data.results.length === 0) {\n          return Notify.failure('Sorry, but nothing found');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    featch();\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const searchQuery = event.target.elements.input.value;\n\n    setSearchParams({ query: searchQuery });\n  };\n\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"input\"\n          onChange={handleInputChange}\n          value={inputText}\n          placeholder=\"Search movies\"\n        />\n        <button className={css.btn} type=\"submit\">\n          <CiSearch color=\"black\" fontSize=\"40px\" />\n        </button>\n      </form>\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id} className={css.item}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchMovies","params","query","axios","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","inputText","setInputText","location","useLocation","get","useEffect","queryParams","featch","data","results","length","Notify","console","log","onSubmit","event","preventDefault","searchQuery","target","elements","input","value","className","css","type","name","onChange","placeholder","color","fontSize","map","movie","to","id","state","from","title"],"sourceRoot":""}